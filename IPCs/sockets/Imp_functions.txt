Functions and structures related to scoket
============================================

#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<unistd.h>
#include<errno.h>
#include<arpa/inet.h>
#include<string.h>

Server:
=======
            int socket(int domain, int type, int protocol)
            Socket((AF_INET, SOCK_STREAM, IPPROTO_TCP)
            On success, a file descriptor for the new socket is returned.  On error, -1 is returned
            
              |
              V
            int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);
            bind(socketfd, (struct sockaddr *)&server, sizeof(struct sockaddr))
            On success, zero is returned.  On error, -1 is returned.
              |
              V
            int listen(int sockfd, int backlog);
            listen(socketfd, 5)
            On success, zero is returned.  On error, -1 is returned
              |
              V
            int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);
            accept(socketfd,( struct sockaddr *)&server,&len)
            On success, these system calls return a nonnegative integer that is a descriptor for the accepted socket.  On error, -1 is return
              |
              V
            ssize_t send(int sockfd, const void *buf, size_t len, int flags)
            send(connectfd, buff, sizeof(buff), 0);
            On success, these calls return the number of characters sent.  On error, -1 is returned
              or
            ssize_t recv(int sockfd, void *buf, size_t len, int flags);
            recv(sockfd, buff,sizeof(buff),0);
            These calls return the number of bytes received, or -1 if an error occurred.
              |
              V
            int close(int fd);
            close(socketfd);  
            close() returns zero on success.  On error, -1 is returned


Client:
=======
            socket(AF_INET, SOCK_STREAM,0);
              |
              V
            int connect(int sockfd, const struct sockaddr *addr, socklen_t addrlen);
            connect(sockfd, (struct sockaddr *)&server, len);
            If the connection or binding succeeds, zero is returned.  On error, -1 is returned.
              |
              V
            recv(sockfd, buff,sizeof(buff),0);
              or
            send(connectfd, buff, sizeof(buff), 0);
              |
              V
            close(sockfd);


===============================================================================
structures and other functions used in socket programming
===============================================================================

    #include <netinet/in.h>

    struct sockaddr_in {
        short            sin_family;   // e.g. AF_INET
        unsigned short   sin_port;     // e.g. htons(3490)
        struct in_addr   sin_addr;     // see struct in_addr, below
        char             sin_zero[8];  // zero this if you want to
    };

    struct in_addr {
        unsigned long s_addr;  // load with inet_aton()
    };

    For example:
        struct sockaddr_in myaddr;
        int s;

        myaddr.sin_family = AF_INET;
        myaddr.sin_port = htons(3490);
        inet_aton("63.161.169.137", &myaddr.sin_addr.s_addr);

        s = socket(PF_INET, SOCK_STREAM, 0);
        bind(s, (struct sockaddr*)myaddr, sizeof(myaddr));

    








