Link:
==============
simplestcodings.blogspot.in/2010/10/tcp-header-format.html
============================================================

TCP header format
TCP segments are sent as internet datagrams. The Internet Protocol header 
carries several information fields, including the source and destination 
host addresses. A TCP header follows the internet header, supplying 
information specific to the TCP protocol. This division allows for the 
existence of host level protocols other  than TCP.

TCP Header Format
=============================


        0 1 2 3 4 5 6 7 0   1 2 3 4 5 6 7 0   1 2 3 4 5 6 7 0   1 2 3 4 5 6 7
        ----------------------------------------------------------------------
        |     Source port                   |   Destination port             |
        ----------------------------------------------------------------------
        |                              Sequence Number                       |
        ----------------------------------------------------------------------
        |       |              |U|A|P|R|S|F |                                |
        |Data   |  Reserved    |R|C|S|S|Y|I |       Window                   |                    
        |Offset |              |G|K|H|T|N|N |                                |
        ----------------------------------------------------------------------
        |              Checksum             |        urgent pointer          |
        ----------------------------------------------------------------------
        |              Options                                | Padding      |   
        ----------------------------------------------------------------------
        |                              Data                                  |
        ----------------------------------------------------------------------


==========================================
//TCP Header structure as per RFC 793
==========================================
struct tcphdr {
    u_short th_sport;  /* source port */
    u_short th_dport;  /* destination port */
    tcp_seq th_seq;   /* sequence number */
    tcp_seq th_ack;   /* acknowledgement number */
#if BYTE_ORDER == LITTLE_ENDIAN
    u_int th_x2:4,  /* (unused) */
    th_off:4;  /* data offset */
#endif
#if BYTE_ORDER == BIG_ENDIAN
    u_int th_off:4,  /* data offset */
    th_x2:4;  /* (unused) */
#endif
    u_char th_flags;
#define TH_FIN 0x01
#define TH_SYN 0x02
#define TH_RST 0x04
#define TH_PUSH 0x08
#define TH_ACK 0x10
#define TH_URG 0x20
#define TH_ECE 0x40
#define TH_CWR 0x80
#define TH_FLAGS (TH_FIN|TH_SYN|TH_RST|TH_ACK|TH_URG|TH_ECE|TH_CWR)
    u_short th_win;   /* window */
    u_short th_sum;   /* checksum */
    u_short th_urp;   /* urgent pointer */
};

