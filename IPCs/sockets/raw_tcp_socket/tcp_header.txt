Link:
==============
simplestcodings.blogspot.in/2010/10/tcp-header-format.html
============================================================

TCP header format
TCP segments are sent as internet datagrams. The Internet Protocol header 
carries several information fields, including the source and destination 
host addresses. A TCP header follows the internet header, supplying 
information specific to the TCP protocol. This division allows for the 
existence of host level protocols other  than TCP.

TCP Header Format
=============================


        0 1 2 3 4 5 6 7 0   1 2 3 4 5 6 7 0   1 2 3 4 5 6 7 0   1 2 3 4 5 6 7
        ----------------------------------------------------------------------
        |     Source port                   |   Destination port             |
        ----------------------------------------------------------------------
        |                              Sequence Number                       |
        ----------------------------------------------------------------------
        |       |              |U|A|P|R|S|F |                                |
        |Data   |  Reserved    |R|C|S|S|Y|I |       Window                   |
        |Offset |              |G|K|H|T|N|N |                                |
        ----------------------------------------------------------------------
        |              Checksum             |        urgent pointer          |
        ----------------------------------------------------------------------
        |              Options                                | Padding      |   
        ----------------------------------------------------------------------
        |                              Data                                  |
        ----------------------------------------------------------------------


From /usr/include/linux/tcp.h
==============================

struct tcphdr {
    __be16  source;
    __be16  dest;
    __be32  seq;
    __be32  ack_seq;
#if defined(__LITTLE_ENDIAN_BITFIELD)
    __u16   res1:4,
        doff:4,
        fin:1,
        syn:1,
        rst:1,
        psh:1,
        ack:1,
        urg:1,
        ece:1,
        cwr:1;
#elif defined(__BIG_ENDIAN_BITFIELD)
    __u16   doff:4,
        res1:4,
        cwr:1,
        ece:1,
        urg:1,
        ack:1,
        psh:1,
        rst:1,
        syn:1,
        fin:1;
#else
#error  "Adjust your <asm/byteorder.h> defines"
#endif
    __be16  window;
    __sum16 check;
    __be16  urg_ptr;
};

